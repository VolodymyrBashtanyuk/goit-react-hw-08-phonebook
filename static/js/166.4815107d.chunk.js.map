{"version":3,"file":"static/js/166.4815107d.chunk.js","mappings":"oPAEaA,EAAUC,EAAAA,GAAAA,KAAH,yJ,kBCGdC,GAAWC,EAAAA,EAAAA,IAAO,GAEXC,EAAS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACjC,OACE,UAACN,EAAD,YACE,SAAC,KAAD,CAAOO,QAASL,EAAhB,oCACA,SAAC,KAAD,CACEM,aAAa,MACbC,GAAIP,EACJQ,KAAK,OACLC,KAAK,SACLL,MAAOA,EACPD,SAAUA,EACVO,QAAQ,yHACRC,UAAQ,MAIf,ECrBYC,EAAOb,EAAAA,GAAAA,GAAH,4FAMJc,EAAOd,EAAAA,GAAAA,GAAH,4RAYJe,EAAOf,EAAAA,GAAAA,EAAH,2EAKJgB,EAAShB,EAAAA,GAAAA,OAAH,iNCtBNiB,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7BC,EAAWF,EAAMG,KAAI,YAA0B,IAAvBb,EAAsB,EAAtBA,GAAIE,EAAkB,EAAlBA,KAAMY,EAAY,EAAZA,MACtC,OACE,UAACR,EAAD,YACE,SAACC,EAAD,UAAOL,IADT,KACsB,SAACK,EAAD,UAAOO,KAC3B,SAACN,EAAD,CAAQO,QAAS,kBAAMJ,EAASX,EAAf,EAAjB,sBAFSA,EAKd,IAED,OAAO,SAACK,EAAD,UAAOO,GACf,E,6CCZYI,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,UACbC,SAAS,EACTC,UAAU,0BAGf,E,SCgDD,EAnDqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7B,GAA6BD,EAAAA,EAAAA,IAAYE,EAAAA,IAAjCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MACbC,GAASL,EAAAA,EAAAA,IAAYM,EAAAA,IACrBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,IAuBJ,OACE,iCACE,SAAC,KAAD,wBACA,SAACrC,EAAD,CAAQC,SAxBS,SAAAwC,GACnB,IAAQvC,EAAUuC,EAAIC,cAAdxC,MACRmC,GAASM,EAAAA,EAAAA,GAAezC,GACzB,EAqBmCA,MAAOiC,IACtCD,GACC,UAAC,KAAD,qCAAsCA,EAAtC,UAEA,gCACGD,GACC,SAACZ,EAAD,KAEA,SAACP,EAAD,CAAaC,MA3BJ,WACjB,IAAKoB,EACH,OAAON,EAET,IAAMe,EAAoBT,EAAOU,cAEjC,OAAOhB,EAASM,QAAO,YAGrB,OAHmC,EAAX5B,KACKsC,cACEC,SAASF,EAEzC,GACF,CAgB6BG,GAAc/B,SAf3B,SAAAX,GACfgC,GAASW,EAAAA,EAAAA,IAAc3C,GACxB,KAeO,SAAC,KAAD,SAKT,C,mIC1DY4C,EAAQpD,EAAAA,GAAAA,GAAH,6FAMLqD,EAAWrD,EAAAA,GAAAA,GAAH,iHAORsD,EAAetD,EAAAA,GAAAA,EAAH,4H,6JCbZuD,EAAOvD,EAAAA,GAAAA,KAAH,qIASJwD,EAAQxD,EAAAA,GAAAA,MAAH,oEAKLyD,EAAQzD,EAAAA,GAAAA,MAAH,oGAMLgB,EAAShB,EAAAA,GAAAA,OAAH,6O,uGCtBZ,IAAMkC,EAAa,SAAC,GAAD,SAAEF,SAAuBd,KAAzB,EACbqB,EAAY,SAAC,GAAD,SAAED,OAAmBA,MAArB,EAEZH,EAAW,SAAC,GAAD,IAAGH,EAAH,EAAGA,SAAH,MAAmB,CAAEI,UAAWJ,EAASI,UAAWC,MAAOL,EAASK,MAApE,C","sources":["components/FilterContact/FilterContactStyle.jsx","components/FilterContact/FilterContact.jsx","components/ContactList/ContactListStyled.jsx","components/ContactList/ContactList.jsx","components/Loader/Loader.jsx","Pages/ContactPage/ContactPage.jsx","components/AppStyle.jsx","components/ContactForm/ContactFormStyle.jsx","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: bold;\r\n  width: 350px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n`;\r\n","import PropsType from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\nimport { Wrapper } from './FilterContactStyle';\r\nimport { Label, Input } from 'components/ContactForm/ContactFormStyle';\r\n\r\nconst filterId = nanoid(5);\r\n\r\nexport const Filter = ({ onChange, value }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Label htmlFor={filterId}>Find contacts by name</Label>\r\n      <Input\r\n        autoComplete=\"off\"\r\n        id={filterId}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        required\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropsType.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px 40px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n  border: 1px solid #34b8e9;\r\n  box-shadow: 13px 19px 32px -9px rgba(42, 66, 21, 07);\r\n  :not(:last-child) {\r\n    margin-bottom: 15px;\r\n  }\r\n`;\r\nexport const Text = styled.p`\r\n  width: 35%;\r\n  border-right: 1px solid #34b8e9;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 120px;\r\n  color: #ffffff;\r\n  background-color: #b76677;\r\n  border: #b76677;\r\n\r\n  padding: 8px;\r\n  cursor: pointer;\r\n  :hover,\r\n  :focus {\r\n    background-color: #e90b0b;\r\n  }\r\n`;\r\n","import { List, Item, Button, Text } from './ContactListStyled';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ContactList = ({ items, onDelete }) => {\r\n  const itemList = items.map(({ id, name, phone }) => {\r\n    return (\r\n      <Item key={id}>\r\n        <Text>{name}</Text> <Text>{phone}</Text>\r\n        <Button onClick={() => onDelete(id)}>Delete</Button>\r\n      </Item>\r\n    );\r\n  });\r\n\r\n  return <List>{itemList}</List>;\r\n};\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  itemList: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import { ThreeCircles } from 'react-loader-spinner';\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <ThreeCircles\r\n      height=\"200\"\r\n      width=\"200\"\r\n      color=\"#1cdb9e\"\r\n      wrapperStyle={{}}\r\n      wrapperClass=\"loading\"\r\n      visible={true}\r\n      ariaLabel=\"three-circles-rotating\"\r\n    />\r\n  );\r\n};\r\n\r\n// height=\"100\"\r\n//       width=\"100\"\r\n//       color=\"#7265ec\"\r\n//       wrapperStyle={{}}\r\n//       wrapperClass=\"loading\"\r\n//       visible={true}\r\n//       outerCircleColor=\"\"\r\n//       innerCircleColor=\"\"\r\n//       barColor=\"\"\r\n//       ariaLabel=\"circles-with-bar-loading\"\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { Filter } from 'components/FilterContact/FilterContact';\r\nimport { ContactList } from 'components/ContactList/ContactList';\r\nimport { SubTitle, ErrorMessage } from 'components/AppStyle';\r\nimport { getContact, getFilter, getState } from 'redux/selectors';\r\nimport { filterContacts } from 'redux/filterSlice';\r\nimport { fetchContacts, removeContact } from 'redux/Contacts/contactsOperation';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nconst ContactsPage = () => {\r\n  const contacts = useSelector(getContact);\r\n  const { isLoading, error } = useSelector(getState);\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const filterChange = evt => {\r\n    const { value } = evt.currentTarget;\r\n    dispatch(filterContacts(value));\r\n  };\r\n\r\n  const getFilters = () => {\r\n    if (!filter) {\r\n      return contacts;\r\n    }\r\n    const normalaizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) => {\r\n      const normalaizedName = name.toLowerCase();\r\n      const result = normalaizedName.includes(normalaizedFilter);\r\n      return result;\r\n    });\r\n  };\r\n  const onDelete = id => {\r\n    dispatch(removeContact(id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SubTitle>Contacts</SubTitle>\r\n      <Filter onChange={filterChange} value={filter} />\r\n      {error ? (\r\n        <ErrorMessage>Please try again later {error} :(</ErrorMessage>\r\n      ) : (\r\n        <>\r\n          {isLoading ? (\r\n            <Loader />\r\n          ) : (\r\n            <ContactList items={getFilters()} onDelete={onDelete} />\r\n          )}\r\n          <ToastContainer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsPage;\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  padding-top: 40px;\r\n`;\r\n\r\nexport const SubTitle = styled.h2`\r\n  font-size: 35px;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n  padding-top: 40px;\r\n`;\r\n\r\nexport const ErrorMessage = styled.p`\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: red;\r\n  margin-top: 60px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 400px;\r\n\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 25px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 350px;\r\n  height: 20px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n`;\r\nexport const Button = styled.button`\r\n  width: 100px;\r\n  background-color: #3ca9ba;\r\n  border: transparent;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  :hover,\r\n  :focus {\r\n    background-color: #4f94f3;\r\n  }\r\n`;\r\n","export const getContact = ({contacts}) => contacts.items;\r\nexport const getFilter = ({filter}) => filter.filter;\r\n  \r\nexport const getState = ({ contacts }) => ({ isLoading: contacts.isLoading, error: contacts.error })\r\n"],"names":["Wrapper","styled","filterId","nanoid","Filter","onChange","value","htmlFor","autoComplete","id","type","name","pattern","required","List","Item","Text","Button","ContactList","items","onDelete","itemList","map","phone","onClick","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","contacts","useSelector","getContact","getState","isLoading","error","filter","getFilter","dispatch","useDispatch","useEffect","fetchContacts","evt","currentTarget","filterContacts","normalaizedFilter","toLowerCase","includes","getFilters","removeContact","Title","SubTitle","ErrorMessage","Form","Label","Input"],"sourceRoot":""}
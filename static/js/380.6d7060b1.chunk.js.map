{"version":3,"file":"static/js/380.6d7060b1.chunk.js","mappings":"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","sources":["components/FilterContact/FilterContactStyle.jsx","components/FilterContact/FilterContact.jsx","components/ContactList/ContactListStyled.jsx","components/Modal/UpdateContactModal.jsx","components/Modal/DeleteContactModal.jsx","components/Modal/CallContactModal.jsx","components/ContactList/ButtonList/ButtonList.jsx","components/ContactList/ContactList.jsx","Pages/CustomerPage/CustomerPage.jsx","components/AppStyle.jsx","components/ContactForm/ContactFormStyle.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: bold;\r\n  max-width: 100vw;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  @media screen and (min-width: 480px) {\r\n    width: 350px;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 20px;\r\n  margin-bottom: 10px;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 25px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  max-width: 100vw;\r\n  background-color: #ebeced;\r\n  border: 1px solid black;\r\n  padding: 5px;\r\n  margin-bottom: 10px;\r\n  @media screen and (min-width: 480px) {\r\n    width: 350px;\r\n  }\r\n`;\r\n","import PropsType from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\nimport {\r\n  Label,\r\n  Input,\r\n  Wrapper,\r\n} from 'components/FilterContact/FilterContactStyle';\r\n\r\nconst filterId = nanoid(5);\r\n\r\nexport const Filter = ({ onChange, value }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Label htmlFor={filterId}>Find contacts by name</Label>\r\n      <Input\r\n        autoComplete=\"off\"\r\n        id={filterId}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        required\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropsType.func.isRequired,\r\n  value: PropsType.string.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  display: grid;\r\n  max-width: 100vw;\r\n\r\n  grid-gap: 16px;\r\n  margin-top: 10px;\r\n  margin-right: 0;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  padding-bottom: 20px;\r\n  @media screen and (min-width: 480px) {\r\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n    max-width: calc(100vw - 120px);\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n    max-width: calc(100vw - 72px);\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    max-width: calc(100vw - 48px);\r\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  }\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  max-width: 100vw;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  border: 1px solid #34b8e9;\r\n  border-radius: 15px;\r\n  background-color: #306178;\r\n  box-shadow: 13px 19px 32px -9px rgba(42, 66, 21, 07);\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: 20px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const ButtonCall = styled.button`\r\n  color: #27872a;\r\n  background-color: #c9bebe;\r\n  border: #b76677;\r\n  text-align: center;\r\n  margin-right: 20px;\r\n  padding: 0;\r\n  cursor: pointer;\r\n  :hover,\r\n  :focus {\r\n    color: #08f152;\r\n  }\r\n`;\r\n\r\nexport const ButtonDell = styled.button`\r\n  color: #b01313;\r\n  background-color: #c9bebe;\r\n  border: #b76677;\r\n  text-align: center;\r\n  padding: 0;\r\n  cursor: pointer;\r\n  :hover,\r\n  :focus {\r\n    color: #ff0000;\r\n  }\r\n`;\r\n\r\nexport const ButtonUpdate = styled.button`\r\n  color: #626226;\r\n  background-color: #c9bebe;\r\n  border: #b76677;\r\n  text-align: center;\r\n  margin-right: 20px;\r\n  padding: 0;\r\n  cursor: pointer;\r\n  :hover,\r\n  :focus {\r\n    color: #ffe100;\r\n  }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  height: fit-content;\r\n  border: 1px solid black;\r\n  border-radius: 25%;\r\n  object-fit: contain;\r\n  margin-right: 20px;\r\n  margin-left: 20px;\r\n  cursor: pointer;\r\n  @media screen and (min-width: 480px) {\r\n    margin-right: 40px;\r\n    margin-left: 20px;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 30px;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  text-align: center;\r\n`;\r\n","import { useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateContact } from 'redux/Contacts/contactsOperation';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  useDisclosure,\r\n} from '@chakra-ui/react';\r\nimport { MdSystemUpdate } from 'react-icons/md';\r\n\r\nimport { ButtonUpdate } from '../ContactList/ContactListStyled';\r\n\r\nexport const UpdateContactModal = ({ id, name, number }) => {\r\n  const [names, setNames] = useState(name);\r\n  const [numbers, setNumbers] = useState(number);\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onUpdate = () => {\r\n    dispatch(updateContact({ id, names, numbers }));\r\n  };\r\n\r\n  const inputChange = evt => {\r\n    const { name, value } = evt.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setNames(value);\r\n        break;\r\n      case 'number':\r\n        setNumbers(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const initialRef = useRef(null);\r\n  const finalRef = useRef(null);\r\n\r\n  return (\r\n    <>\r\n      <ButtonUpdate onClick={onOpen}>\r\n        <MdSystemUpdate size=\"25px\" />\r\n      </ButtonUpdate>\r\n\r\n      <Modal\r\n        initialFocusRef={initialRef}\r\n        finalFocusRef={finalRef}\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>You can change</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <FormControl>\r\n              <FormLabel>Name</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                id={names}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={names}\r\n                onChange={inputChange}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Phone</FormLabel>\r\n              <Input\r\n                id={numbers}\r\n                value={numbers}\r\n                onChange={inputChange}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n              />\r\n            </FormControl>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onUpdate}>\r\n              Save\r\n            </Button>\r\n            <Button onClick={onClose}>Cancel</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport { removeContact } from 'redux/Contacts/contactsOperation';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n} from '@chakra-ui/react';\r\nimport { MdDeleteForever } from 'react-icons/md';\r\n\r\nimport { ButtonDell } from '../ContactList/ContactListStyled';\r\n\r\nexport const DeleteContactModal = ({ id }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onDelete = id => {\r\n    dispatch(removeContact(id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ButtonDell onClick={onOpen}>\r\n        <MdDeleteForever size=\"25px\" />\r\n      </ButtonDell>\r\n\r\n      <Modal closeOnOverlayClick={false} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={5} pt={5} color=\"red\">\r\n            Are You sure want to DELETE Contact\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button mr={4} colorScheme=\"red\" onClick={() => onDelete(id)}>\r\n              Yes\r\n            </Button>\r\n            <Button onClick={onClose} colorScheme=\"green\">\r\n              No\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { ButtonCall } from 'components/ContactList/ContactListStyled';\r\nimport { FaPhoneAlt } from 'react-icons/fa';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  Image,\r\n  Progress,\r\n} from '@chakra-ui/react';\r\n\r\nconst noImage =\r\n  'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQxrGcz-CAJweJ_YbvY8Sb2bPsCNQwsSJ2jng&usqp=CAU';\r\n\r\nexport const CallContactModal = ({ name }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const bgOverlay = () => (\r\n    <ModalOverlay\r\n      bg=\"blackAlpha.300\"\r\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\r\n    />\r\n  );\r\n  const [overlay, setOverlay] = useState();\r\n\r\n  return (\r\n    <>\r\n      <ButtonCall\r\n        onClick={() => {\r\n          setOverlay(bgOverlay());\r\n          onOpen();\r\n        }}\r\n      >\r\n        <FaPhoneAlt size=\"25px\" />\r\n      </ButtonCall>\r\n\r\n      <Modal\r\n        isCentered\r\n        closeOnOverlayClick={false}\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n      >\r\n        {overlay}\r\n        <ModalOverlay />\r\n        <ModalContent bg=\"green.300\">\r\n          <ModalCloseButton />\r\n          <ModalBody fontWeight=\"bold\" pb=\"10px\" pt=\"20px\" textAlign=\"center\">\r\n            <Image\r\n              bgColor=\"white\"\r\n              borderRadius=\"full\"\r\n              boxSize=\"150px\"\r\n              m=\"10px auto\"\r\n              objectFit=\"scale-down\"\r\n              border=\"1px solid #0c1434\"\r\n              src={noImage}\r\n              alt={name}\r\n            />\r\n            You calling.. {name}\r\n            <Progress size=\"sm\" isIndeterminate />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={onClose} colorScheme=\"red\">\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { UpdateContactModal } from 'components/Modal/UpdateContactModal';\r\nimport { DeleteContactModal } from 'components/Modal/DeleteContactModal';\r\nimport { CallContactModal } from 'components/Modal/CallContactModal';\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport { Container } from '../ContactListStyled';\r\n\r\nexport const ButtonList = ({ id, name, number }) => {\r\n  return (\r\n    <ChakraProvider>\r\n      <Container>\r\n        <CallContactModal name={name} />\r\n        <UpdateContactModal id={id} name={name} number={number} />\r\n        <DeleteContactModal id={id} />\r\n      </Container>\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nButtonList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { List, Item, Text, Img } from './ContactListStyled';\r\nimport { ButtonList } from './ButtonList/ButtonList';\r\n\r\nconst noImage =\r\n  'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQxrGcz-CAJweJ_YbvY8Sb2bPsCNQwsSJ2jng&usqp=CAU';\r\n\r\nexport const ContactList = ({ items }) => {\r\n  const itemList = items.map(({ id, name, number }) => {\r\n    return (\r\n      <Item key={id}>\r\n        <Img src={noImage} alt=\"\" width=\"100\"></Img>\r\n        <div>\r\n          <Text>{name}</Text>\r\n          <Text>{number}</Text>\r\n          <ButtonList id={id} name={name} number={number} />\r\n        </div>\r\n      </Item>\r\n    );\r\n  });\r\n\r\n  return <List>{itemList}</List>;\r\n};\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  itemList: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { Filter } from 'components/FilterContact/FilterContact';\r\nimport { ContactList } from 'components/ContactList/ContactList';\r\nimport { getContact, getFilter, getState } from 'redux/selectors';\r\nimport { filterContacts } from 'redux/Contacts/filterSlice';\r\nimport { fetchContacts } from 'redux/Contacts/contactsOperation';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { SubTitle, ErrorMessage } from 'components/AppStyle';\r\nimport { Wrapper } from 'components/ContactForm/ContactFormStyle';\r\n\r\nconst CustomerPage = () => {\r\n  const contacts = useSelector(getContact);\r\n  const { isLoading, error } = useSelector(getState);\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const filterChange = evt => {\r\n    const { value } = evt.currentTarget;\r\n    dispatch(filterContacts(value));\r\n  };\r\n\r\n  const getFilters = () => {\r\n    if (!filter) {\r\n      return contacts;\r\n    }\r\n    const normalaizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) => {\r\n      const normalaizedName = name.toLowerCase();\r\n      const result = normalaizedName.includes(normalaizedFilter);\r\n      return result;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <SubTitle>Contacts</SubTitle>\r\n      <Filter onChange={filterChange} value={filter} />\r\n      {error ? (\r\n        <ErrorMessage>Please try again later {error} :(</ErrorMessage>\r\n      ) : (\r\n        <>\r\n          {isLoading ? <Loader /> : <ContactList items={getFilters()} />}\r\n          <ToastContainer />\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CustomerPage;\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin-bottom: 40px;\r\n  padding-top: 40px;\r\n  @media screen and (min-width: 480px) {\r\n    font-size: 30px;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    margin-bottom: 20px;\r\n    padding-top: 40px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n  }\r\n`;\r\n\r\nexport const SubTitle = styled.h2`\r\n  font-size: 35px;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n  padding-top: 40px;\r\n`;\r\n\r\nexport const ErrorMessage = styled.p`\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: red;\r\n  margin-top: 60px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 100vw;\r\n  padding-right: 5px;\r\n  padding-left: 5px;\r\n  padding-bottom: 20px;\r\n  @media screen and (min-width: 480px) {\r\n    width: 400px;\r\n    border: 1px solid back;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 15px;\r\n  margin-bottom: 10px;\r\n  @media screen and (min-width: 480px) {\r\n    font-size: 25px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  max-width: 100vw;\r\n  background-color: #ebeced;\r\n  border: 1px solid black;\r\n  padding: 5px;\r\n  margin-bottom: 15px;\r\n\r\n  @media screen and (min-width: 480px) {\r\n    width: 400px;\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 150px;\r\n  font-weight: bold;\r\n  background-color: #3ca9ba;\r\n  border: transparent;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  :hover,\r\n  :focus {\r\n    background-color: #4f94f3;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  min-height: 100vh;\r\n  background-image: url(https://static4.depositphotos.com/1011006/279/v/450/depositphotos_2790613-stock-illustration-notebook-and-lens-concept.jpg);\r\n`;\r\n"],"names":["Wrapper","styled","Label","Input","filterId","nanoid","Filter","onChange","value","htmlFor","autoComplete","id","type","name","pattern","required","List","Item","Text","ButtonCall","ButtonDell","ButtonUpdate","Img","Container","UpdateContactModal","number","useState","names","setNames","numbers","setNumbers","useDisclosure","isOpen","onOpen","onClose","dispatch","useDispatch","inputChange","evt","currentTarget","initialRef","useRef","finalRef","onClick","size","initialFocusRef","finalFocusRef","pb","ref","mt","colorScheme","mr","updateContact","DeleteContactModal","closeOnOverlayClick","pt","color","removeContact","onDelete","CallContactModal","overlay","setOverlay","bg","backdropFilter","isCentered","fontWeight","textAlign","bgColor","borderRadius","boxSize","m","objectFit","border","src","alt","isIndeterminate","ButtonList","ContactList","itemList","items","map","width","contacts","useSelector","getContact","getState","isLoading","error","filter","getFilter","useEffect","fetchContacts","filterContacts","Loader","normalaizedFilter","toLowerCase","includes","getFilters","Title","SubTitle","ErrorMessage","Form","Button"],"sourceRoot":""}
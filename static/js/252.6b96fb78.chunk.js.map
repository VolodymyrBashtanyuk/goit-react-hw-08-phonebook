{"version":3,"file":"static/js/252.6b96fb78.chunk.js","mappings":"gSAcaA,EAAY,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAQXC,EAAa,WACjBL,EAAS,IACTE,EAAY,GACb,EAEKI,EAAe,SAAAC,GACnB,MAAwBA,EAAIC,cAApBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACHT,EAASU,GACT,MACF,IAAK,WACHR,EAAYQ,GACZ,MACF,QACE,OAEL,EAED,OACE,SAAC,KAAD,CACEC,GAAG,QACHC,QAAQ,wIACRC,WAAW,SACXC,SAAS,SACTC,GAAG,OACHC,GAAG,OANL,UAQE,iBAAMC,SAlCU,SAAAV,GAClBA,EAAIW,iBACJf,GAASgB,EAAAA,EAAAA,IAAS,CAAEpB,MAAAA,EAAOE,SAAAA,KAC3BI,GACD,EA8BG,UACE,UAAC,KAAD,CACEe,OAAO,kBACPC,aAAa,OACbC,GAAG,UACHC,EAAE,OACFC,EAAE,QACFC,GAAG,OACHC,GAAG,OACHX,GAAG,OACHY,QAAQ,UACRC,UAAU,SAVZ,WAYE,SAAC,KAAD,CAAWC,QAAQ,QAAQC,MAAM,UAAjC,4BAGA,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,cAAc,OACdC,UACE,SAAC,KAAD,CAAWF,MAAM,UAAUG,OAAQ,CAAEH,MAAO,gBAGhD,SAAC,KAAD,CACER,GAAG,QACHY,YAAY,UACZC,OAAQ,CAAED,YAAa,WACvBE,YAAY,YACZC,GAAG,QACH5B,KAAK,QACL6B,KAAK,QACLC,SAAUjC,EACVI,MAAOX,QAIX,SAAC,KAAD,CAAW8B,QAAQ,WAAWC,MAAM,UAAUU,GAAG,MAAjD,uBAGA,UAAC,KAAD,YACE,SAAC,KAAD,CACET,cAAc,OACdC,UACE,SAAC,KAAD,CAAUF,MAAM,UAAUG,OAAQ,CAAEH,MAAO,gBAG/C,SAAC,KAAD,CACER,GAAG,QACHY,YAAY,UACZC,OAAQ,CAAED,YAAa,WACvBE,YAAY,WACZC,GAAG,WACH5B,KAAK,WACL6B,KAAK,WACLC,SAAUjC,EACVI,MAAOT,QAIX,SAAC,KAAD,CACEwC,YAAY,OACZd,QAAQ,QACRa,GAAG,OACHE,GAAG,OACHlB,EAAE,OACFc,KAAK,SANP,yBAcT,E,mBCjHD,EATkB,WAChB,OACE,UAAC,MAAD,YACE,SAACzC,EAAD,KACA,SAAC,KAAD,MAGL,C","sources":["components/LoginForm/LoginForm.jsx","Pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loggedIn } from 'auth/authRegister';\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  InputLeftElement,\r\n  InputGroup,\r\n  Button,\r\n} from '@chakra-ui/react';\r\nimport { EmailIcon, LockIcon } from '@chakra-ui/icons';\r\n\r\nexport const LoginForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const submitLogin = evt => {\r\n    evt.preventDefault();\r\n    dispatch(loggedIn({ email, password }));\r\n    resetLogin();\r\n  };\r\n\r\n  const resetLogin = () => {\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  const handleChange = evt => {\r\n    const { name, value } = evt.currentTarget;\r\n    switch (name) {\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n      case 'password':\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      mh=\"100vh\"\r\n      bgImage=\"url('https://st2.depositphotos.com/3715149/7222/v/450/depositphotos_72226323-stock-illustration-contacts-simple-vector-icon-set.jpg')\"\r\n      bgPosition=\"center\"\r\n      bgRepeat=\"repeat\"\r\n      pt=\"40px\"\r\n      pb=\"40px\"\r\n    >\r\n      <form onSubmit={submitLogin}>\r\n        <FormControl\r\n          border=\"1px solid black\"\r\n          borderRadius=\"20px\"\r\n          bg=\"#306178\"\r\n          p=\"20px\"\r\n          w=\"600px\"\r\n          mr=\"auto\"\r\n          ml=\"auto\"\r\n          pt=\"20px\"\r\n          variant=\"outline\"\r\n          textAlign=\"center\"\r\n        >\r\n          <FormLabel htmlFor=\"email\" color=\"#e9eaed\">\r\n            Email Address\r\n          </FormLabel>\r\n          <InputGroup>\r\n            <InputLeftElement\r\n              pointerEvents=\"none\"\r\n              children={\r\n                <EmailIcon color=\"#306178\" _focus={{ color: '#3182ce' }} />\r\n              }\r\n            />\r\n            <Input\r\n              bg=\"white\"\r\n              borderColor=\"#12edd9\"\r\n              _hover={{ borderColor: '#3182ce' }}\r\n              placeholder=\"Full name\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              onChange={handleChange}\r\n              value={email}\r\n            />\r\n          </InputGroup>\r\n\r\n          <FormLabel htmlFor=\"password\" color=\"#e9eaed\" mt=\"5px\">\r\n            Password\r\n          </FormLabel>\r\n          <InputGroup>\r\n            <InputLeftElement\r\n              pointerEvents=\"none\"\r\n              children={\r\n                <LockIcon color=\"#306178\" _focus={{ color: '#3182ce' }} />\r\n              }\r\n            />\r\n            <Input\r\n              bg=\"white\"\r\n              borderColor=\"#12edd9\"\r\n              _hover={{ borderColor: '#3182ce' }}\r\n              placeholder=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={handleChange}\r\n              value={password}\r\n            />\r\n          </InputGroup>\r\n\r\n          <Button\r\n            colorScheme=\"cyan\"\r\n            variant=\"solid\"\r\n            mt=\"40px\"\r\n            mb=\"20px\"\r\n            w=\"100%\"\r\n            type=\"submit\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </FormControl>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n","import { LoginForm } from 'components/LoginForm/LoginForm';\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <ChakraProvider>\r\n      <LoginForm />\r\n      <ToastContainer />\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["LoginForm","useState","email","setEmail","password","setPassword","dispatch","useDispatch","resetLogin","handleChange","evt","currentTarget","name","value","mh","bgImage","bgPosition","bgRepeat","pt","pb","onSubmit","preventDefault","loggedIn","border","borderRadius","bg","p","w","mr","ml","variant","textAlign","htmlFor","color","pointerEvents","children","_focus","borderColor","_hover","placeholder","id","type","onChange","mt","colorScheme","mb"],"sourceRoot":""}